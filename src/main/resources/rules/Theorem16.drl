package com.geometry
//list any import classes here.

import com.geometry.Angle;
import com.geometry.Point;
import com.geometry.Line;
import com.geometry.Relation;
import com.geometry.GeoType;
import com.geometry.GeoRelation;
import com.geometry.Triangle;
import com.geometry.ExpressionRelation;
import com.geometry.RelationType;
import com.engine.CheckingEngine;
import com.test.Log;
//declare any global variables here

rule "Theorem16"

    when
        //conditions
         $ABCD : Quadrangle()
        $ABlineDC : GeoRelation( this.firstItem.type == GeoType.LINE, this.secondItem.type == GeoType.LINE, this.relation==Relation.EQUALS )
        $ADlineBC : GeoRelation( this.firstItem.type == GeoType.LINE, this.secondItem.type == GeoType.LINE, this.relation==Relation.EQUALS )
   		
   		// Line are contain quadrangle
   		//line AB
   		eval($ABCD.isAPoint(((Line)$ABlineDC.firstItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABlineDC.firstItem).endPoints[1]))
    //line CD
   		eval($ABCD.isAPoint(((Line)$ABlineDC.secondItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ABlineDC.secondItem).endPoints[1]))
    
    //line AD
   		eval($ABCD.isAPoint(((Line)$ADlineBC.firstItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ADlineBC.firstItem).endPoints[1]))
    //line BC
   		eval($ABCD.isAPoint(((Line)$ADlineBC.secondItem).endPoints[0]) && $ABCD.isAPoint(((Line)$ADlineBC.secondItem).endPoints[1]))
    
    //Line must not same
    //AB CD two line
    	//eval(!((Line)$ABlineDC.firstItem).sameItem((Line)$ABlineDC.secondItem))
    //AD BC two line
    	//eval(!((Line)$ADlineBC.firstItem).sameItem((Line)$ADlineBC.secondItem))
    //ABlineDC and ADlineBC relation should be different
    	eval(!((Line)$ABlineDC.firstItem).sameItem((Line)$ADlineBC.firstItem))
    	eval(!((Line)$ABlineDC.firstItem).sameItem((Line)$ADlineBC.secondItem))
    	eval(!((Line)$ABlineDC.secondItem).sameItem((Line)$ADlineBC.firstItem))
    	eval(!((Line)$ABlineDC.secondItem).sameItem((Line)$ADlineBC.secondItem))
    	//havet common point two equalline
    	eval(!((Line)$ABlineDC.firstItem).isAPoint(((Line)$ABlineDC.secondItem).endPoints[0]) && !((Line)$ABlineDC.firstItem).isAPoint(((Line)$ABlineDC.secondItem).endPoints[1]))
    	eval(!((Line)$ADlineBC.firstItem).isAPoint(((Line)$ADlineBC.secondItem).endPoints[0]) && !((Line)$ADlineBC.firstItem).isAPoint(((Line)$ADlineBC.secondItem).endPoints[1]))
    then
        //actions
         //actions
        $ABCD.isAParalleologram=true;
       // insert($ABCD);
	System.out.println("Theorem16");

end


